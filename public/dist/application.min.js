"use strict";var ApplicationConfiguration=function(){var applicationModuleName="focali-mean",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.utils","ipCookie","toastr","pasvaz.bindonce","djds4rce.angular-socialshare","ngFileUpload","ngProgress","angular-loading-bar","ngLodash","sn.addthis"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule,defaults:{currency:"USD",locale:"en"}}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider",function($locationProvider,$httpProvider){$locationProvider.hashPrefix("!")}]).run(["$rootScope","CartService","CustomerService","$anchorScroll","$FB",function($rootScope,CartService,CustomerService,$anchorScroll,$FB){CustomerService.checkCookieAndLogin(),CartService.pageLoad(),$rootScope.$on("$viewContentLoaded",function(){$anchorScroll()}),$FB.init("841888042555433")}]).constant("appDefaults",ApplicationConfiguration.defaults),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("braintree"),ApplicationConfiguration.registerModule("carts"),ApplicationConfiguration.registerModule("core",["adaptive.detection"]),ApplicationConfiguration.registerModule("customers"),ApplicationConfiguration.registerModule("misc"),ApplicationConfiguration.registerModule("orders"),ApplicationConfiguration.registerModule("products",["pasvaz.bindonce"]),angular.module("braintree").service("BraintreeService",["$http","$q",function($http,$q){this.clientToken=function(userId){var deferred=$q.defer(),queryString="";return userId&&(queryString+="?customerId="+userId),$http.get("/braintree/clientToken"+queryString).success(function(data){deferred.resolve(data)}),deferred.promise},this.checkout=function(checkoutParameters){var deferred=$q.defer();return $http.post("/braintree/checkout",checkoutParameters).success(function(data){deferred.resolve(data)}),deferred.promise}}]),angular.module("carts").config(["$stateProvider",function($stateProvider){$stateProvider.state("cart",{url:"/cart",templateUrl:"modules/carts/views/cart.client.view.html"}).state("viewCart",{url:"/carts/:id",templateUrl:"modules/carts/views/view-cart.client.view.html"}).state("checkout",{url:"/checkout",templateUrl:"modules/carts/views/checkout.client.view.html"}).state("test",{url:"/test",templateUrl:"modules/carts/views/test.html"})}]),angular.module("carts").controller("CartController",["$scope","Authentication","CartService","$rootScope","$location","LoggerServices","Cart","$stateParams","OrderService","ipCookie",function($scope,Authentication,CartService,$rootScope,$location,LoggerServices,Cart,$stateParams,OrderService,ipCookie){$scope.authentication=Authentication,$scope.isCheckout=$location.path().indexOf("checkout")>-1,$scope.proceedToCheckout=function(){if(null!=$rootScope.cart&&null!=$rootScope.cart.lineItems&&$rootScope.cart.lineItems.length>0){var cookieId=null;null!=ipCookie("anonymousCart",void 0,{path:"/"})&&(cookieId=ipCookie("anonymousCart",void 0,{path:"/"})),!Authentication.user&&cookieId?CartService.refreshCart(cookieId).then(function(cart){$rootScope.cart=cart,$location.path("/checkout")}):$location.path("/checkout")}},$scope.removeFromCart=function(item){CartService.removeFromCart(item)},$scope.addDiscountCode=function(code){null!=code&&($rootScope.loading=!0,CartService.addDiscountCode($rootScope.cart.id,$rootScope.cart.version,{code:code}).then(function(result){$rootScope.cart=result,$rootScope.loading=!1,LoggerServices.success("Discount applied.")},function(error){$rootScope.loading=!1,LoggerServices.warning(error)}))},$scope.increaseLineItemQuantity=function(item){item.quantity++,$rootScope.loading=!0,CartService.changeLineItemQuantity($rootScope.cart.id,$rootScope.cart.version,{lineItemId:item.id,quantity:item.quantity}).then(function(result){$rootScope.cart=result,$rootScope.loading=!1,LoggerServices.success("Quantity updated.")},function(error){item.quantity--,$rootScope.loading=!1,LoggerServices.warning(error)})},$scope.decreaseLineItemQuantity=function(item){item.quantity--,$rootScope.loading=!0,CartService.changeLineItemQuantity($rootScope.cart.id,$rootScope.cart.version,{lineItemId:item.id,quantity:item.quantity}).then(function(result){$rootScope.cart=result,$rootScope.loading=!1,LoggerServices.success("Quantity updated.")},function(error){item.quantity++,$rootScope.loading=!1,LoggerServices.warning(error)})},$scope.findOne=function(){Cart.get({cartId:$stateParams.id},function(data){$scope.cart=data})}}]),angular.module("carts").controller("CheckoutController",["$scope","Authentication","$rootScope","CartService","ShippingMethods","Order","$location","Addresses","LoggerServices","Cart","ShippingMethodService","$anchorScroll","$window","Prescriptions","Upload","ngProgressFactory","AddressSelector","BraintreeService","ipCookie","$http",function($scope,Authentication,$rootScope,CartService,ShippingMethods,Order,$location,Addresses,LoggerServices,Cart,ShippingMethodService,$anchorScroll,$window,Prescription,Upload,ngProgressFactory,AddressSelector,BraintreeService,ipCookie,$http){$scope.dataStates=AddressSelector.dataStates,$scope.card={},$scope.loadingPayPal=0,$scope.eyewearPrescriptionCount=0,$scope.billingMethods=[{name:"Credit Card"},{name:"PayPal"}],$scope.highindex=!1,$scope.blueBlock=!1,$scope.anchorScroll=function(where){$location.hash(where),$anchorScroll(where)},$scope.showPhasePrescription=function(){$scope.phasePrescription=!0,$scope.phaseA=!1,$scope.phaseB=!1,$scope.phaseC=!1,$scope.phaseD=!1,$scope.phaseE=!1,$scope.anchorScroll(null)},$scope.showPhaseA=function(){$scope.phasePrescription=!1,$scope.phaseA=!0,$scope.phaseB=!1,$scope.phaseC=!1,$scope.phaseD=!1,$scope.phaseE=!1,$scope.anchorScroll(null)},$scope.showPhaseB=function(){$scope.phasePrescription=!1,$scope.phaseA=!1,$scope.phaseB=!0,$scope.phaseC=!1,$scope.phaseD=!1,$scope.phaseE=!1,$scope.anchorScroll(null)},$scope.showPhaseC=function(){$scope.phasePrescription=!1,$scope.phaseA=!1,$scope.phaseB=!1,$scope.phaseC=!0,$scope.phaseD=!1,$scope.phaseE=!1,$scope.anchorScroll(null),BraintreeService.clientToken().then(function(response){response.success===!0&&braintree.setup(response.clientToken,"dropin",{container:"dropin-container",onPaymentMethodReceived:function(obj){$scope.paymentInfo=obj,$scope.showPhaseD(),$scope.$apply()}})})},$scope.showPhaseD=function(){$scope.phasePrescription=!1,$scope.phaseA=!1,$scope.phaseB=!1,$scope.phaseC=!1,$scope.phaseD=!0,$scope.phaseE=!1,$scope.anchorScroll(null)},$scope.showPhaseE=function(){$scope.phasePrescription=!1,$scope.phaseA=!1,$scope.phaseB=!1,$scope.phaseC=!1,$scope.phaseD=!1,$scope.phaseE=!0,$scope.anchorScroll(null)},$scope.cartPrescriptionCount=function(){var has=0;for(var i in $rootScope.cart.lineItems){var line=$rootScope.cart.lineItems[i];(line.distributionChannel.key&&"nonprescription"!=line.distributionChannel.key||line.distributionChannel.obj&&line.distributionChannel.obj.key&&"nonprescription"!=line.distributionChannel.obj.key)&&(has+=line.quantity)}return has},null==$location.search().jumpto?$scope.showPhaseA():"billingMethod"==$location.search().jumpto?($scope.showPhaseC(),LoggerServices.warning("There was a problem on the Payment site.")):$scope.showPhaseA(),$scope.showPrescriptionSummary=!1;var determineHighIndexBlueBlockVisibility=function(){CartService.cartEyewearPrescriptionCount($rootScope.cart.id).then(function(result){$scope.cartEyewearPrescriptionCount=result,result>0&&($scope.highindex=!0,$scope.blueBlock=!0)})},init=function(){null!=$rootScope.cart?$http.get("/api/carts/"+$rootScope.cart.id).then(function(cart){if($rootScope.cart=cart.data,$scope.cartPrescriptionCount()>0&&(determineHighIndexBlueBlockVisibility(),$scope.showPhasePrescription(),$scope.showPrescriptionSummary=!0),null!=$rootScope.cart.shippingAddress){if(Authentication.user&&null!=Authentication.user.addresses&&Authentication.user.addresses.length>0)for(var i=0;i<Authentication.user.addresses.length;i++)$rootScope.cart.shippingAddress.streetName==Authentication.user.addresses[i].streetName&&$rootScope.cart.shippingAddress.firstName==Authentication.user.addresses[i].firstName&&$rootScope.cart.shippingAddress.lastName==Authentication.user.addresses[i].lastName&&(Authentication.user.addresses[i].selected=!0);$rootScope.loading=!0,ShippingMethodService.byLocationOneCurrency("US",null,"USD","US").then(function(data){$scope.shippingMethods=data,$rootScope.loading=!1}),$scope.$$phase||$scope.$apply()}}):console.log("Cart is still null. Loading delay?")};if(null==$rootScope.cart)var cartWatch=$rootScope.$watch("cart",function(cart){null!=cart&&(cartWatch(),init())});else init();$scope.authentication=Authentication,$scope.selectShippingAddress=function(shippingAddress){$scope.selectedShippingAddress=shippingAddress,$rootScope.cart.shippingAddress=shippingAddress},$scope.selectShippingMethod=function(shippingMethod){$scope.selectedShippingMethod=shippingMethod},$scope.selectBillingAddress=function(billingAddress){$scope.selectedBillingAddress=billingAddress,$rootScope.cart.billingAddress=billingAddress},$scope.setShippingAddress=function(shippingAddress){if(!$rootScope.loading){var finalShippingAddress=shippingAddress;$scope.selectedShippingAddress&&(finalShippingAddress=$scope.selectedShippingAddress),$rootScope.loading=!0,CartService.setShippingAddress($rootScope.cart.id,{address:finalShippingAddress}).then(function(result){$rootScope.cart=result,LoggerServices.success("Shipping address updated"),ShippingMethodService.byLocationOneCurrency("US",null,"USD","US").then(function(data){if($scope.shippingMethods=data,null!=$rootScope.cart.shippingInfo)for(var i=0;i<$scope.shippingMethods.length;i++)$scope.shippingMethods[i].name==$rootScope.cart.shippingInfo.shippingMethodName&&($scope.shippingMethods[i].selected=!0,$scope.selectedShippingMethod=$scope.shippingMethods[i]);$rootScope.loading=!1,$scope.showPhaseB()})},function(err){LoggerServices.warning(err),$rootScope.loading=!1})}},$scope.setBillingAddress=function(billingAddress){if(!$rootScope.loading){var finalBillingAddress=billingAddress;$scope.selectedBillingAddress&&(finalBillingAddress=$scope.selectedBillingAddress),$rootScope.loading=!0,CartService.setBillingAddress($rootScope.cart.id,{address:finalBillingAddress}).then(function(result){$rootScope.cart=result,LoggerServices.success("Billing address updated"),$scope.showPhaseE()})}},$scope.setShippingMethod=function(){!$rootScope.loading&&$scope.selectedShippingMethod&&($rootScope.loading=!0,CartService.setShippingMethod($rootScope.cart.id,{shippingMethod:{id:$scope.selectedShippingMethod.id,typeId:"shipping-method"}}).then(function(result){$rootScope.cart=result,LoggerServices.success("Shipping method updated"),$scope.showPhaseC(),$rootScope.loading=!1},function(error){$rootScope.loading=!1,LoggerServices.warning(error)}))},$scope.placeOrder=function(){event.preventDefault();var order=new Order({id:$rootScope.cart.id,version:$rootScope.cart.version});order.$save(function(order){$scope.order=order,processPaymentMethods(order)},function(error){$rootScope.loading=!1,LoggerServices.warning(error.data)})};var processPaymentMethods=function(order){var customerId=Authentication.user?Authentication.user.id:void 0;if($scope.paymentInfo){var checkoutParameters={payment_method_nonce:$scope.paymentInfo.nonce,submitForSettlement:!1,customerId:customerId,orderId:order.id};BraintreeService.checkout(checkoutParameters).then(function(response){$scope.paymentInfo=void 0,response.success===!0?(LoggerServices.success("Payment was authorized"),$location.path("/orders/"+order.id)):LoggerServices.warning("Payment was not authorized. Message: "+response.message+"Order:  "+order.id);var customerId=Authentication.user?Authentication.user.id:void 0,cookieId=null;null!=ipCookie("anonymousCart",void 0,{path:"/"})&&(cookieId=ipCookie("anonymousCart",void 0,{path:"/"})),CartService.init(customerId,cookieId).then(function(cart){$rootScope.cart=cart})})}};$scope.addCustomerAddress=function(address,valid){console.log(valid);var address=new Addresses(address);$rootScope.loading=!0,address.$save(function(response){Authentication.user=response,LoggerServices.success("Address added"),$rootScope.loading=!1,console.log("success address")},function(response){$scope.error=response.data.message,$rootScope.loading=!1,LoggerServices.error(response)},function(error){$rootScope.loading=!1,LoggerServices.warning(error)})},$scope.validateShippingAddress=function(){return $rootScope.cart&&$rootScope.cart.shippingAddress&&$rootScope.cart.shippingAddress.streetName&&$rootScope.cart.shippingAddress.firstName&&$rootScope.cart.shippingAddress.lastName&&$rootScope.cart.shippingAddress.postalCode&&$rootScope.cart.shippingAddress.city&&$rootScope.cart.shippingAddress.country},$scope.validateBillingAddress=function(){return $rootScope.cart&&$rootScope.cart.billingAddress&&$rootScope.cart.billingAddress.streetName&&$rootScope.cart.billingAddress.firstName&&$rootScope.cart.billingAddress.lastName&&$rootScope.cart.billingAddress.postalCode&&$rootScope.cart.billingAddress.city&&$rootScope.cart.billingAddress.country},$scope.validateCreditCard=function(){return null!=$scope.card.card_number&&null!=$scope.card.card_exp&&null!=$scope.card.card_security_code},$scope.selectHighIndex=function(status){var method=status?"addHighIndex":"removeHighIndex",highIndexLine=$scope.highIndexLine(),payload={quantity:$scope.cartEyewearPrescriptionCount,lineId:highIndexLine?highIndexLine.id:null};if(highIndexLine||status)return $rootScope.loading=!0,CartService[method]($rootScope.cart.id,$rootScope.cart.version,payload).then(function(result){$rootScope.cart=result,status&&LoggerServices.success("Added high-index lenses"),$rootScope.loading=!1},function(err){$rootScope.loading=!1,LoggerServices.error("Could not save, please try again"),console.log(err)}),!1},$scope.selectBlueBlock=function(status){var method=status?"addBlueBlock":"removeBlueBlock",blueBlockLine=$scope.blueBlockLine(),payload={quantity:$scope.cartEyewearPrescriptionCount,lineId:blueBlockLine?blueBlockLine.id:null};if(blueBlockLine||status)return $rootScope.loading=!0,CartService[method]($rootScope.cart.id,$rootScope.cart.version,payload).then(function(result){$rootScope.cart=result,status&&LoggerServices.success("Added Blue Block AR"),$rootScope.loading=!1},function(err){$rootScope.loading=!1,LoggerServices.error("Could not save, please try again"),console.log(err)}),!1},$scope.getPrescription=function(prescription){new Prescription({_id:$rootScope.cart.id}).$get().then(function(result){result.value&&(console.log(result.value),$scope.prescription=result.value,"reader"==$scope.prescription.type?$scope.prescription.strength=$scope.prescription.data.strength:"calldoctor"==$scope.prescription.method?($scope.prescription.calldoctor=$scope.prescription.data,$scope.anchorScroll("calldoctor")):"sendlater"==$scope.prescription.method?$scope.anchorScroll("lensType"):"upload"==$scope.prescription.method&&($scope.prescription.upload=result.value.data))})},$scope.savePrescription=function(type_method,valid){$scope.savedPrescription={};var data={};$scope.prescription=$scope.prescription||{};var save=function(type,method,data,callback){$rootScope.loading=!0,new Prescription({_id:$rootScope.cart.id,version:$rootScope.cart.version,type:type,method:method,data:data}).$save(function(response){$scope.prescription=response.prescription,$scope.prescription.method=response.prescription.value.method,$scope.prescription.type=response.prescription.value.type,"reader"==$scope.prescription.type?$scope.prescription.strength=$scope.prescription.value.data.strength:"calldoctor"==$scope.prescription.method?$scope.prescription.calldoctor=$scope.prescription.value.data:"sendlater"==$scope.prescription.method&&console.log("Will send prescriptions later"),$rootScope.cart=response.cart,$rootScope.loading=!1,LoggerServices.success("Prescription saved"),callback(response)},function(response){$scope.error=response.data.message,$rootScope.loading=!1,LoggerServices.error(response)},function(error){$rootScope.loading=!1,LoggerServices.warning(error)})};switch(type_method){case"reader":if(!valid)return!1;null!=$scope.highIndexLine()&&$scope.selectHighIndex(!1),data={strength:$scope.prescription.strength},save("reader",null,data,function(){$scope.showPhaseA()});break;case"calldoctor":valid&&(data=$scope.prescription.calldoctor,save("prescription","calldoctor",data,function(){$scope.anchorScroll("calldoctor")}));break;case"sendlater":save("prescription","sendlater","",function(){$scope.anchorScroll("lensType")});break;case"upload":save("prescription","upload",$scope.prescription.upload,function(){$scope.anchorScroll("lensType")})}},$scope.uploadPrescription=function(files){$scope.prescription.method="upload",$scope.progressbar=$scope.progressbar||ngProgressFactory.createInstance(),$scope.progressbar.set(0);var finished=!1,extensions=["jpg","jpeg","png","pdf"],maxSizeMB=20;files&&files.length>0&&(extensions.indexOf(files[0].name.split(".").pop())<0?LoggerServices.error("Incorrect file format"):files[0].size/1048576>maxSizeMB?LoggerServices.error("File size exceeded (max. "+maxSizeMB+"MB)"):Upload.upload({url:"/prescriptions/upload",file:files[0]}).progress(function(evt){var progressPercentage=parseInt(100*evt.loaded/evt.total);finished||$scope.progressbar.set(.9*progressPercentage),$scope.log="progress: "+progressPercentage+"% "+evt.config.file.name+"\n"+$scope.log}).success(function(data,status,headers,config){finished=!0,$scope.progressbar.complete(),LoggerServices.success("Prescription uploaded"),$scope.prescription.method="upload",$scope.prescription.upload=data,$scope.savePrescription("upload")}).error(function(data,status,headers,config){console.log(status),$scope.progressbar.reset()}))},$scope.highIndexLine=function(){for(var i in $rootScope.cart.customLineItems){var line=$rootScope.cart.customLineItems[i];if("high-index-lens"==line.slug)return line}return null},$scope.blueBlockLine=function(){for(var i in $rootScope.cart.customLineItems){var line=$rootScope.cart.customLineItems[i];if("blue-block"==line.slug)return line}return null}}]),angular.module("carts").directive("prescriptionBox",function(){return{restrict:"E",templateUrl:"modules/carts/templates/prescriptionBox.client.template.html",scope:!1,transclude:!0,replace:!0,link:function($scope,$element,$attrs){$element.find(".header").text($attrs.header),$element.css("width",Math.floor(100/$attrs.size-1)+"%"),$element.on("click",function(){$element.parent().find(".prescription-box").removeClass("selected"),$element.addClass("selected")})}}}),angular.module("carts").filter("prescriptionName",function(){return function(input){switch(input){case"sendlater":return"Send Later";case"calldoctor":return"Call Doctor";case"upload":return"Upload File"}}}),angular.module("carts").factory("Cart",["$resource",function($resource){return $resource("api/carts/:cartId",{cartId:"@_cartId"},{update:{method:"PUT"}})}]),angular.module("carts").service("CartService",["$http","$q","ipCookie","$rootScope","Authentication","LoggerServices","Cart",function($http,$q,ipCookie,$rootScope,Authentication,LoggerServices,Cart){var urlString="/api/carts";this.pageLoad=function(){$rootScope.loading=!0;var customerId=null,cookieId=null;null!=Authentication.user&&(customerId=Authentication.user.id),null!=ipCookie("anonymousCart",void 0,{path:"/"})&&(cookieId=ipCookie("anonymousCart",void 0,{path:"/"})),this.init(customerId,cookieId).then(function(cart){console.log("Cart ID: "+cart.id),$rootScope.cart=cart,null==customerId&&(ipCookie("anonymousCart",$rootScope.cart.id,{path:"/"}),console.log("Cart saved in cookie.")),$rootScope.loading=!1})},this.addToCart=function(productId,variantId,channel,quantity){var payload={productId:productId,variantId:variantId,quantity:quantity,distributionChannel:channel};$rootScope.loading=!0,this.addLineItem($rootScope.cart.id,$rootScope.cart.version,payload).then(function(result){LoggerServices.success("Product added"),$rootScope.cart=result,$rootScope.loading=!1},function(error){LoggerServices.error("Error while adding to Sphere Cart"),$rootScope.loading=!1})},this.removeFromCart=function(item){var payload={lineItemId:item.id};$rootScope.loading=!0,this.removeLineItem($rootScope.cart.id,$rootScope.cart.version,payload).then(function(result){LoggerServices.success("Product removed"),$rootScope.cart=result,$rootScope.loading=!1},function(error){LoggerServices.success("Error while removing to Sphere Cart. Restoring previous one."),$rootScope.loading=!1})},this.addLineItem=function(cartId,version,payload){var deferred=$q.defer();return $http.post(urlString+"/addLineItem/"+cartId+"/"+version,payload).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.removeLineItem=function(cartId,version,payload){var deferred=$q.defer();return $http.post(urlString+"/removeLineItem/"+cartId+"/"+version,payload).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.byCustomer=function(customerId){var deferred=$q.defer();return $http.get(urlString+"/byCustomer/"+customerId).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.setShippingAddress=function(cartId,payload){var deferred=$q.defer();return $http.post(urlString+"/setShippingAddress/"+cartId,payload).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.setBillingAddress=function(cartId,payload){var deferred=$q.defer();return $http.post(urlString+"/setBillingAddress/"+cartId,payload).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.setShippingMethod=function(cartId,payload){var deferred=$q.defer();return $http.post(urlString+"/setShippingMethod/"+cartId,payload).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.changeLineItemQuantity=function(cartId,version,payload){var deferred=$q.defer();return $http.post(urlString+"/changeLineItemQuantity/"+cartId+"/"+version,payload).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.addDiscountCode=function(cartId,version,payload){var deferred=$q.defer();return $http.post(urlString+"/addDiscountCode/"+cartId+"/"+version,payload).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.addHighIndex=function(cartId,version,payload){var deferred=$q.defer();return $http.post(urlString+"/highIndex/"+cartId+"/"+version,payload).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.removeHighIndex=function(cartId,version,payload){var deferred=$q.defer();return $http.post(urlString+"/removeHighIndex/"+cartId+"/"+version,payload).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.addBlueBlock=function(cartId,version,payload){var deferred=$q.defer();return $http.post(urlString+"/blueBlock/"+cartId+"/"+version,payload).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.removeBlueBlock=function(cartId,version,payload){var deferred=$q.defer();return $http.post(urlString+"/removeBlueBlock/"+cartId+"/"+version,payload).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.init=function(customerId,cookieId){var deferred=$q.defer(),path=urlString+"/init";return customerId&&(path+="?customer="+customerId),cookieId&&(path+=customerId?"&cookie="+cookieId:"?cookie="+cookieId),$http.get(path).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.refreshCart=function(cookieId){var deferred=$q.defer(),path=urlString+"/refreshCart?cookie="+cookieId;return $http.get(path).success(function(data){deferred.resolve(data)}).error(function(error){deferred.reject(error)}),deferred.promise},this.cartEyewearPrescriptionCount=function(cartId){var deferred=$q.defer(),path=urlString+"/cartEyewearPrescriptionCount?cartId="+cartId;return $http.get(path).success(function(data){deferred.resolve(parseInt(data))}).error(function(error){deferred.reject(error)}),deferred.promise}}]),angular.module("carts").service("OptileService",["$http","$q",function($http,$q){var urlString="/optile";this.list=function(country,customer,payment){var deferred=$q.defer(),payload={country:country,customer:customer,payment:payment};return $http.post(urlString+"/list",payload).success(function(data){deferred.resolve(data)}),deferred.promise}}]),angular.module("carts").factory("Prescriptions",["$resource",function($resource){return $resource("prescriptions/:cartId",{cartId:"@_id"},{save:{method:"POST"},update:{method:"PUT"},delete:{method:"DELETE"},get:{method:"GET"}})}]),angular.module("carts").factory("ShippingMethods",["$resource",function($resource){return $resource("shipping-methods/:shippingMethodId",{productId:"@_id"},{update:{method:"PUT"}})}]),angular.module("carts").service("ShippingMethodService",["$http","$q",function($http,$q){var urlString="/shipping-methods";this.byLocationOneCurrency=function(country,state,currency,zonename){var deferred=$q.defer(),path="",params=[];country&&params.push("country="+country),state&&params.push("state="+state),currency&&params.push("currency="+currency),zonename&&params.push("zonename="+zonename);for(var i=0;i<params.length;i++)0==i?path="?"+params[i]:path+="&"+params[i];return $http.get(urlString+"/byLocationOneCurrency"+path).success(function(data){deferred.resolve(data)}),deferred.promise}}]),angular.module("carts").service("AddressSelector",[function(){this.dataCountries=[{value:"US",label:"United States"}],this.dataStates={US:[{code:"AL",name:"Alabama"},{code:"AK",name:"Alaska"},{code:"AS",name:"American Samoa"},{code:"AZ",name:"Arizona"},{code:"AR",name:"Arkansas"},{code:"AF",name:"Armed Forces Africa"},{code:"AA",name:"Armed Forces Americas"},{code:"AC",name:"Armed Forces Canada"},{code:"AE",name:"Armed Forces Europe"},{code:"AM",name:"Armed Forces Middle East"},{code:"AP",name:"Armed Forces Pacific"},{code:"CA",name:"California"},{code:"CO",name:"Colorado"},{code:"CT",name:"Connecticut"},{code:"DE",name:"Delaware"},{code:"DC",name:"District of Columbia"},{code:"FM",name:"Federated States Of Micronesia"},{code:"FL",name:"Florida"},{code:"GA",name:"Georgia"},{code:"GU",name:"Guam"},{code:"HI",name:"Hawaii"},{code:"ID",name:"Idaho"},{code:"IL",name:"Illinois"},{code:"IN",name:"Indiana"},{code:"IA",name:"Iowa"},{code:"KS",name:"Kansas"},{code:"KY",name:"Kentucky"},{code:"LA",name:"Louisiana"},{code:"ME",name:"Maine"},{code:"MH",name:"Marshall Islands"},{code:"MD",name:"Maryland"},{code:"MA",name:"Massachusetts"},{code:"MI",name:"Michigan"},{code:"MN",name:"Minnesota"},{code:"MS",name:"Mississippi"},{code:"MO",name:"Missouri"},{code:"MT",name:"Montana"},{code:"NE",name:"Nebraska"},{code:"NV",name:"Nevada"},{code:"NH",name:"New Hampshire"},{code:"NJ",name:"New Jersey"},{code:"NM",name:"New Mexico"},{code:"NY",name:"New York"},{code:"NC",name:"North Carolina"},{code:"ND",name:"North Dakota"},{code:"MP",name:"Northern Mariana Islands"},{code:"OH",name:"Ohio"},{code:"OK",name:"Oklahoma"},{code:"OR",name:"Oregon"},{code:"PW",name:"Palau"},{code:"PA",name:"Pennsylvania"},{code:"PR",name:"Puerto Rico"},{code:"RI",name:"Rhode Island"},{code:"SC",name:"South Carolina"},{code:"SD",name:"South Dakota"},{code:"TN",name:"Tennessee"},{code:"TX",name:"Texas"},{code:"UT",name:"Utah"},{code:"VT",name:"Vermont"},{code:"VI",name:"Virgin Islands"},{code:"VA",name:"Virginia"},{code:"WA",name:"Washington"},{code:"WV",name:"West Virginia"},{code:"WI",name:"Wisconsin"},{code:"WY",name:"Wyoming"}]}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider","$locationProvider",function($stateProvider,$urlRouterProvider,$locationProvider){window.location.search&&window.location.search.match(/\?_escaped_fragment_/i)||$urlRouterProvider.otherwise("/"),$locationProvider.html5Mode(!0),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("landingSummer",{url:"/landing/summer/:gender",templateUrl:"modules/core/views/landing-summer.client.view.html"})}]),angular.module("core").controller("FooterController",["$scope","Authentication","LoggerServices","$http",function($scope,Authentication,LoggerServices,$http){$scope.authentication=Authentication,$scope.subscribeToNewsletter=function(){var list="newsletter",urlString="/api/subscribe/"+list,params={email:$scope.newsletter.email};$http.post(urlString,params).success(function(result){var status="true"===result.toLowerCase();status?(LoggerServices.success("An email has been sent to you to complete the subscription"),$scope.newsletter={}):LoggerServices.error("There was an error subscribing, please try again.")}).error(function(e){LoggerServices.error(e.error)})}}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus","CartService","CustomerService","$location","$rootScope","$http","$window","ipCookie",function($scope,Authentication,Menus,CartService,CustomerService,$location,$rootScope,$http,$window,ipCookie){$scope.authentication=Authentication,$scope.removeFromCart=function(item){CartService.removeFromCart(item)},$scope.proceedToCheckout=function(){if(null!=$rootScope.cart&&null!=$rootScope.cart.lineItems&&$rootScope.cart.lineItems.length>0){var cookieId=null;null!=ipCookie("anonymousCart",void 0,{path:"/"})&&(cookieId=ipCookie("anonymousCart",void 0,{path:"/"})),!Authentication.user&&cookieId?CartService.refreshCart(cookieId).then(function(cart){$rootScope.cart=cart,$location.path("/checkout")}):$location.path("/checkout")}},$scope.signout=function(){$http.get("/api/auth/signout").success(function(result){$rootScope.cart=result,$window.location="/"}).error(function(error){console.log(error)})},$scope.search=function(text){$location.path("text/"+text)}}]),angular.module("core").controller("HomeController",["$scope","Authentication","ContentfulService","$stateParams","LoggerServices","$sce",function($scope,Authentication,ContentfulService,$stateParams,LoggerServices,$sce){$scope.authentication=Authentication,$scope.lang="en",$scope.trustAsHtml=function(string){return $sce.trustAsHtml(string)},$stateParams.hasOwnProperty("gender")&&($scope.gender=$stateParams.gender),$stateParams.hasOwnProperty("slug")&&($scope.category=$stateParams.slug),$scope.loadContent=function(page,args){console.log("Loading contentful data: "+page+"("+(args?args:"")+")"),ContentfulService[page](args).then(function(data){console.log("Contentful page loaded."),$scope.contentfulData=data})}}]),angular.module("core").directive("hero",function(){return{link:function(scope,element,attrs){$(element).unslider({speed:800,delay:4e3,dots:!0,fluid:!0})}}}),angular.module("core").directive("cartFadeInClass",["$detection",function($detection){return{restrict:"C",link:function(scope,element,attrs){var mobile=$detection.isAndroid()||$detection.isiOS()||$detection.isWindowsPhone()||$detection.isBB10();mobile||$(element).mouseover(function(){$(element.parent().children()[1]).fadeIn().removeClass("hidden");
})}}}]),angular.module("core").directive("cartFadeOutClass",["$detection",function($detection){return{restrict:"C",link:function(scope,element,attrs){var mobile=$detection.isAndroid()||$detection.isiOS()||$detection.isWindowsPhone()||$detection.isBB10();mobile||$(element).mouseleave(function(){$(element).fadeOut().addClass("hidden")})}}}]),angular.module("core").directive("priceRange",function(){return{link:function(scope,element,attrs){$(element).noUiSlider({start:[0,500],connect:!0,range:{min:0,max:500}}),$(element).Link("lower").to($("#range-number-min"),null,wNumb({decimals:0})),$(element).Link("upper").to($("#range-number-max"),null,wNumb({decimals:0}))}}}),angular.module("core").directive("uicheckbox",function(){return{link:function(scope,element,attrs){$(element).click(function(){$(this).parent("label").toggleClass("checked")})}}}),angular.module("core").directive("thumbnailWrapper",function(){return{restrict:"C",link:function(scope,element,attrs){$(element).click(function(){$(element).removeClass("active");var url=$(this).data("url");return $(".img-big img").fadeOut(),setTimeout(function(){$(".img-big img").attr("src",url),$(".img-big img").fadeIn()},500),$(this).addClass("active"),!1})}}}),angular.module("core").directive("panelLoader",function(){return{restrict:"C",link:function(scope,element,attrs){$(element).click(function(){$(".select").removeClass("active"),$(element).parent(".select").addClass("active");var target=$(this).data("target");return target&&$(".product-panels").load("modules/products/views/content-panels/"+target+".client.view.html"),!1})}}}),angular.module("core").directive("panelTrigger",function(){return{restrict:"C",link:function(scope,element,attrs){$(element).click(function(){return $(this).parents(".ex-panel").attr("class").indexOf("disabled")==-1&&$(this).parents(".ex-panel").toggleClass("active"),!1})}}}),angular.module("core").directive("blockRadio",function(){return{restrict:"C",link:function(scope,element,attrs){$(element).click(function(){for(var radios=$(this).parent().children(),i=0;i<radios.length;i++)$(radios[i]).removeClass("checked");$(this).addClass("checked")})}}}),angular.module("core").directive("error",function(){return{restrict:"C",link:function(scope,element,attrs){$(element).focus(function(){$(this).removeClass("error")})}}}),angular.module("core").directive("select",function(){return{restrict:"E",link:function(scope,element,attrs){$(element).on("change",function(){$(this).addClass("active")})}}}),angular.module("core").directive("tab",function(){return{restrict:"C",link:function(scope,element,attrs){$(element).click(function(){var target=$(this).data("tab"),openthis="#"+target;return $(".tab").removeClass("active"),$(".tab-content").removeClass("active"),$(openthis).addClass("active"),$(element).addClass("active"),!1})}}}),angular.module("core").directive("errSrc",function(){return{link:function(scope,element,attrs){element.bind("error",function(){attrs.src!=attrs.errSrc?attrs.$set("src",attrs.errSrc):attrs.$set("src","/design/images/noimage.jpg")})}}}),angular.module("core").directive("ngEnter",function(){return function(scope,element,attrs){element.bind("keydown keypress",function(event){13===event.which&&(scope.$apply(function(){scope.$eval(attrs.ngEnter)}),event.preventDefault())})}}),angular.module("core").directive("scrollTop",function(){return{restrict:"A",link:function(){window.scrollTo(0,0)}}}),angular.module("core").directive("addthisToolbox",["$timeout","$location","$rootScope",function($timeout,$location,$rootScope){return{restrict:"A",transclude:!0,replace:!0,template:"<div ng-transclude></div>",link:function($scope,element,attrs){addthis.init(),setTimeout(function(){addthis.toolbox($(element).get(),{},{url:$location.absUrl(),title:$rootScope.productShare?$rootScope.productShare.name.en:"",description:$rootScope.productShare?$rootScope.productShare.description.en:""})},4e3)}}}]);var LOCALE="en";angular.module("core").filter("locale",["appDefaults",function(appDefaults){return function(input){var locale=appDefaults.locale||LOCALE;return input?input[locale]:""}}]),angular.module("core").filter("priceTimes",function(){return function(price,times){price.value&&(price=price.value);var totalLinePrice=angular.copy(price);return totalLinePrice.centAmount=totalLinePrice.centAmount*times,totalLinePrice}}),angular.module("core").filter("sumDiscounts",function(){return function(includedDiscounts){var totalLineDiscount={currencyCode:includedDiscounts[0].discountedAmount.currencyCode,centAmount:0};for(var i in includedDiscounts)totalLineDiscount.centAmount+=includedDiscounts[i].discountedAmount.centAmount;return{value:totalLineDiscount}}}),angular.module("core").filter("priceMath",function(){return function(firstPrice,secondPrice,op){var price=angular.copy(firstPrice);switch(op){case"+":price.centAmount+=secondPrice.centAmount;break;case"-":price.centAmount-=secondPrice.centAmount}return price}}),angular.module("core").filter("range",function(){return function(input,min,max){min=parseInt(min),max=parseInt(max);for(var i=min;i<max;i++)input.push(i);return input}}),angular.module("core").filter("size",function(){return function(input,size){if(input){var dotIndex=input.lastIndexOf("."),fileName=input.substring(0,dotIndex),fileExtention=input.substring(dotIndex,input.length);input=fileName+"-"+size+fileExtention}return input}}),angular.module("core").provider("$exceptionHandler",{$get:["exceptionLoggingService",function(exceptionLoggingService){return exceptionLoggingService}]}),angular.module("core").factory("exceptionLoggingService",["$log","$window","Authentication",function($log,$window,Authentication){function error(exception,cause){$log.error.apply($log,arguments);var customer=Authentication.user?Authentication.user.id:"Anonymous";try{var errorMessage=exception.toString();StackTrace.fromError(exception).then(function(stackTrace){$.ajax({type:"POST",url:"/api/log",contentType:"application/json",data:angular.toJson({browser:navigator.userAgent,url:$window.location.href,message:errorMessage,type:"exception",stackTrace:stackTrace,cause:cause||"",customer:customer})})})}catch(loggingError){$log.warn("Error server-side logging failed"),$log.log(loggingError)}}return error}]),angular.module("core").factory("HeadDataService",["$http",function($http){var headData=null;return $http.get("/api/config").success(function(data){headData=data}),{headData:function(){return headData}}}]),angular.module("core").service("LoggerServices",["$log","toastr",function($log,toastr){function error(message,title){toastr.error(message,title,{positionClass:"toast-bottom-right"}),$log.error("Error: "+message)}function info(message,title){toastr.info(message,title,{positionClass:"toast-bottom-right"}),$log.info("Info: "+message)}function infoLong(message,title){toastr.info(message,title,{timeOut:2e4,positionClass:"toast-bottom-right"}),$log.info("Info: "+message)}function success(message,title){toastr.success(message,title,{positionClass:"toast-bottom-right"}),$log.info("Success: "+message)}function warning(message,title){toastr.warning(message,title,{positionClass:"toast-bottom-right"}),$log.warn("Warning: "+message)}function desktopNotification(message,title){var options={body:message,icon:"icon.jpg",dir:"ltr"};if("Notification"in window)if("granted"===Notification.permission){new Notification(title,options)}else"denied"!==Notification.permission&&Notification.requestPermission(function(permission){if("permission"in Notification||(Notification.permission=permission),"granted"===permission){new Notification(title,options)}});else alert("This browser does not support desktop notification")}var logger={error:error,info:info,infoLong:infoLong,success:success,warning:warning,desktopNotification:desktopNotification,log:$log.log};return logger}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",!0)}]),angular.module("customers").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("customers").config(["$stateProvider",function($stateProvider){$stateProvider.state("login",{url:"/login",templateUrl:"modules/customers/views/login.client.view.html"}).state("account",{url:"/account",templateUrl:"modules/customers/views/account.client.view.html"}).state("account-new",{url:"/account-new",templateUrl:"modules/customers/views/account-new.client.view.html"}).state("edit-address",{url:"/edit-address/:id",templateUrl:"modules/customers/views/my-account/edit-address.client.view.html"}).state("my-addresses",{url:"/my-addresses",templateUrl:"modules/customers/views/my-account/my-addresses.client.view.html"}).state("my-orders",{url:"/my-orders",templateUrl:"modules/customers/views/my-account/my-orders.client.view.html"}).state("order-details",{url:"/order-details",templateUrl:"modules/customers/views/my-account/order-details.client.view.html"}).state("reset-password",{url:"/password/reset/:token",templateUrl:"modules/customers/views/reset-password.client.view.html"})}]),angular.module("customers").controller("AuthenticationController",["$scope","$http","$location","Authentication","$rootScope","CustomerService","LoggerServices",function($scope,$http,$location,Authentication,$rootScope,CustomerService,LoggerServices){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.register=function(){var createValues={firstName:$scope.register.firstName,lastName:$scope.register.lastName,email:$scope.register.email,password:$scope.register.password};$http.post("/api/auth/signup",createValues).success(function(response){$scope.authentication.user=response,$location.path("#!/account"),$scope.register={},LoggerServices.success("Registered successfully")}).error(function(response){LoggerServices.error(response.message),$scope.register.password=null})},$scope.signin=function(){$rootScope.loading=!0,$scope.credentials.anonymousCartId=$rootScope.cart.id,$http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response.customer,$rootScope.cart=response.cart,console.log("Cart from Sphere after login. ID: "+$rootScope.cart.id),response.hasOwnProperty("remember")&&CustomerService.setCookie(response.remember.rem,response.remember.rid),$scope.credentials={},$location.path("/"),$rootScope.loading=!1,LoggerServices.success("Logged in successfully")}).error(function(response){LoggerServices.error(response.message),$rootScope.loading=!1})},$scope.requestPasswordReset=function(){$scope.reset_result=null,$http.post("/api/customers/password-token",$scope.reset).success(function(response){$scope.reset_result={status:"success",message:"An email has been sent to reset the password"},$scope.reset={}}).error(function(error){$scope.reset_result={status:"error",message:error.message}})}}]),angular.module("customers").controller("CustomerController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("customers").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.resetPassword=function(){$scope.reset_result=null;var payload={token:$stateParams.token,password:$scope.reset.password};return $scope.reset.password!=$scope.reset.repeatPassword?($scope.reset={},$scope.reset_result={status:"error",message:"Password do not match"},!1):void $http.post("/api/customers/password/reset",payload).success(function(response){$scope.reset={},$scope.reset_result={status:"success",message:"Password reset successful"}}).error(function(response){$scope.reset_result={status:"error",message:response.message}})},$scope.cancel=function(){$location.path("/")},$scope.goToLogin=function(){$location.path("/login")}}]),angular.module("customers").controller("ProfileController",["$scope","$http","$stateParams","$location","Customers","Authentication","Addresses","updateStatus","LoggerServices","AddressSelector",function($scope,$http,$stateParams,$location,Customers,Authentication,Addresses,updateStatus,LoggerServices,AddressSelector){$scope.dataStates=AddressSelector.dataStates,$scope.customer=angular.copy(Authentication.user),$scope.customer||$location.path("/"),$scope.updateCustomerProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var customer=new Customers($scope.customer);customer.$update(function(response){$scope.success="Profile updated successfully.",Authentication.user=response,$scope.customer=angular.copy(Authentication.user)},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeCustomerPassword=function(){return $scope.success=$scope.error=null,$scope.password.newPassword!=$scope.password.repeatPassword?void LoggerServices.error("The new passwords don't match"):void $http.put("/api/customers/password/update",$scope.password).success(function(response){LoggerServices.success(response.message),$scope.password={}}).error(function(response){LoggerServices.error(response.message)})},$scope.addCustomerAddress=function(form){if(form.$valid){$scope.success=$scope.error=null;var address=new Addresses($scope.newAddress);address.$save(function(response){$scope.success=!0,Authentication.user=response,$scope.customer=angular.copy(Authentication.user),$scope.newAddress={},$scope.addAddressError=null,$scope.addAddressSuccess="Address added successfully",updateStatus={},form.$setPristine()},function(error){$scope.addAddressError=error.data.message})}else $scope.submitted=!0},$scope.deleteAddress=function(address){if(!address)return console.log("No address to delete."),!1;$scope.success=$scope.error=null;var address=new Addresses(address);address.$delete(function(response){$scope.success=!0,Authentication.user=response,$scope.customer=angular.copy(Authentication.user),$scope.addAddressError=null,$scope.addAddressSuccess="Address deleted successfully",updateStatus={}},function(error){$scope.addAddressError=error.data.message})},$scope.editAddress=function(address){address&&$location.path("/edit-address/"+address.id)},$scope.updateCustomerAddress=function(form){if(form.$valid){var address=new Addresses($scope.editAddress);address.$update(function(response){Authentication.user=response,$location.path("/my-addresses"),updateStatus.message="Address updated successfully"},function(error){$scope.updateError="Error updating the address"})}},$scope.fetchOwnAddressPerId=function(){for(var id=$stateParams.id,addresses=$scope.customer.addresses,i=0;i<addresses.length;i++)if(addresses[i].id==id)return addresses[i];$scope.error="Address not found"},$scope.defaultAddress=function(){$scope.newAddress={},$scope.newAddress.country=""},$scope.getUpdateStatus=function(){return updateStatus},$scope.fetchSubscription=function(list){$http.get("/api/issubscribed/"+list).success(function(result){$scope[list+"Subscription"]="true"===result.toLowerCase()})},$scope.updateSubscription=function(list){var params,urlString=$scope[list+"Subscription"]?"/api/unsubscribe/"+list:"/api/subscribe/"+list;$http.post(urlString,params).success(function(result){var status="true"===result.toLowerCase();$scope.error="",status?$scope.success="An email has been sent to you to complete the subscription":$scope.success="Unsubscribed successfully",$scope[list+"Subscription"]=status}).error(function(e){$scope.success=null,$scope.error=e.error,$scope[list+"Subscription"]=!1})},$scope.fetchOrders=function(){$scope.orders=[],$http.get("/api/orders/own").success(function(result){console.log(result),$scope.orders=result}).error(function(error){console.log(error)})}}]),angular.module("customers").filter("totalItems",function(){return function(lineItems){var count=0;return lineItems.forEach(function(line){count+=line.quantity}),count}}).filter("statusColor",function(){return function(status){var color;switch(status){case"Paid":color="green";break;case"Open":color="yellow";break;case"Complete":color="green";break;case"Cancelled":color="red"}return color}});var module=angular.module("customers");module.factory("Addresses",["$resource",function($resource){return $resource("api/addresses/:id",{id:"@id"},{save:{method:"POST",params:{id:""}},update:{method:"PUT"},delete:{method:"DELETE"},get:{method:"GET"}})}]).factory("updateStatus",function(){var status;return status=status||{}}),angular.module("customers").factory("Authentication",["$window",function($window){var auth={user:""!==$window.user?window.user:null};return auth}]),angular.module("customers").factory("Customers",["$resource",function($resource){return $resource("api/customers",{},{update:{method:"PUT"}})}]).factory("CustomerService",["$http","ipCookie","$rootScope","Authentication",function($http,ipCookie,$rootScope,Authentication){var funs={setCookie:function(value,rid){ipCookie("rem",value,{expires:21}),ipCookie("rid",rid,{expires:21})},checkCookieAndLogin:function(){var funs=this;if(!Authentication.user&&ipCookie("rem")){console.log("Requesting login from cookie");var payload={rem:ipCookie("rem"),rid:ipCookie("rid")};$http.post("/api/auth/token",payload).success(function(response){Authentication.user=response.customer,$rootScope.cart=response.cart}).error(function(error){console.log("Could not login from cookie"),funs.removeCookie()})}}};return funs}]),angular.module("misc").config(["$stateProvider",function($stateProvider){$stateProvider.state("locations",{url:"/locations",templateUrl:"modules/misc/views/locations.client.view.html"}).state("about-us",{url:"/about-us",templateUrl:"modules/misc/views/about-us.client.view.html"}).state("support",{url:"/support",templateUrl:"modules/misc/views/help.client.view.html"}).state("privacy",{url:"/privacy",templateUrl:"modules/misc/views/privacy.client.view.html"}).state("terms-of-use",{url:"/terms-of-use",templateUrl:"modules/misc/views/terms-of-use.client.view.html"})}]),angular.module("misc").controller("AboutUsController",["$scope","Authentication","ContentfulService","$sce",function($scope,Authentication,ContentfulService,$sce){$scope.authentication=Authentication,$scope.trustAsHtml=function(string){return $sce.trustAsHtml(string)},$scope.loadContent=function(){ContentfulService.byTypeAndName("aboutUsPage","About Us").then(function(result){console.log("Contentful page loaded."),$scope.contentfulData=result.data})}}]),angular.module("misc").controller("ContactusController",["$scope","Authentication","$http",function($scope,Authentication,$http){$scope.authentication=Authentication,$scope.authentication&&null!=$scope.authentication.user&&($scope.contactUs={},$scope.contactUs.email=$scope.authentication.user.email,$scope.contactUs.name=$scope.authentication.user.name),$scope.contactUsSubmit=function(valid){if(!valid)return void($scope.contactError="Please fill in all the required fields");var post_body={name:$scope.contactUs.name,email:$scope.contactUs.email,message:$scope.contactUs.message};$http.post("/api/contactUs",post_body).success(function(result){$scope.contactSuccess=$scope.contactError=null,"sent"==result.status?($scope.contactSuccess="Message sent successfully. We'll get back to you as soon as possible!",$scope.contactUs.message=""):$scope.contactError="There was an error sending the email, please try again"}).error(function(error){$scope.contactError="We seem to be having troubles on our end, please try again later"})}}]),angular.module("misc").controller("HelpController",["$scope","Authentication","ContentfulService","$sce",function($scope,Authentication,ContentfulService,$sce){$scope.authentication=Authentication,$scope.trustAsHtml=function(string){return $sce.trustAsHtml(string)},$scope.loadContent=function(page,args){console.log("Loading contentful data: "+page+"("+(args?args:"")+")"),ContentfulService[page](args).then(function(data){console.log("Contentful page loaded."),$scope.contentfulData=data})}}]),angular.module("misc").controller("LocationsController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("misc").controller("PrivacyController",["$scope","Authentication","ContentfulService","$sce",function($scope,Authentication,ContentfulService,$sce){$scope.authentication=Authentication,$scope.trustAsHtml=function(string){return $sce.trustAsHtml(string)},$scope.loadContent=function(){ContentfulService.byTypeAndName("miscPage","Privacy Page").then(function(result){console.log("Contentful page loaded."),$scope.contentfulData=result.data})}}]),angular.module("misc").controller("TermsOfUseController",["$scope","Authentication","ContentfulService","$sce",function($scope,Authentication,ContentfulService,$sce){$scope.authentication=Authentication,$scope.trustAsHtml=function(string){return $sce.trustAsHtml(string)},$scope.loadContent=function(){ContentfulService.byTypeAndName("miscPage","Terms of Use").then(function(result){console.log("Contentful page loaded."),$scope.contentfulData=result.data})}}]),angular.module("misc").service("ContentfulService",["$http","$q",function($http,$q){var urlString="/contentful";this.home=function(){var deferred=$q.defer();return $http.get(urlString+"/home").success(function(data){deferred.resolve(data)}),deferred.promise},this.eyewear=function(gender){var deferred=$q.defer();return $http.get(urlString+"/category/eyewear/"+gender).success(function(data){deferred.resolve(data)}),deferred.promise},this.sunglasses=function(gender){var deferred=$q.defer();return $http.get(urlString+"/category/sunglasses/"+gender).success(function(data){deferred.resolve(data)}),deferred.promise},this.summer=function(gender){var deferred=$q.defer();return $http.get(urlString+"/summer/"+gender).success(function(data){deferred.resolve(data)}),deferred.promise},this.help=function(){var deferred=$q.defer();return $http.get(urlString+"/help").success(function(data){deferred.resolve(data)}),deferred.promise},this.byTypeAndName=function(type,name){return $http.get(urlString+"/byTypeAndName",{params:{type:type,name:name}})}}]),angular.module("misc").service("CustomObjectService",["$http","$q",function($http,$q){var urlString="/custom-objects";this.find=function(container,key){var deferred=$q.defer();return $http.get(urlString+"/find?container="+container+"&key="+key).success(function(data){deferred.resolve(data)}),deferred.promise}}]),angular.module("orders").config(["$stateProvider",function($stateProvider){$stateProvider.state("orders",{url:"/orders",templateUrl:"modules/orders/views/orders.client.view.html"}).state("view-order",{url:"/orders/:orderId",templateUrl:"modules/orders/views/view-order.client.view.html"}).state("order-view",{url:"/order-view",templateUrl:"modules/orders/views/view-order.client.view.html"})}]),angular.module("orders").controller("OrdersController",["$scope","Authentication","Order","$stateParams",function($scope,Authentication,Order,$stateParams){$scope.authentication=Authentication,$scope.findOne=function(){var id=null;id=null==$stateParams.orderId?$stateParams.orderId:$stateParams.orderId,Order.get({orderId:id},function(data){$scope.paymentInfo=data.paymentInfo.payments[0].obj.paymentMethodInfo.method,$scope.order=data})}}]),angular.module("orders").factory("Order",["$resource",function($resource){return $resource("api/orders/:orderId",{productId:"@_id"},{update:{method:"PUT"}})}]),angular.module("orders").service("OrderService",["$http","$q","$location","$window",function($http,$q,$location,$window){}]),angular.module("products").config(["$stateProvider",function($stateProvider){$stateProvider.state("viewProduct",{url:"/products/:id",templateUrl:"modules/products/views/product-detail.client.view.html"}).state("categoryProducts",{url:"/categories/:slug",templateUrl:"modules/products/views/category-home.client.view.html"}).state("categoryGenderProducts",{url:"/categories/:gender/:slug",templateUrl:"modules/products/views/category-products.client.view.html"}).state("searchByText",{url:"/text/:text",templateUrl:"modules/products/views/category-products.client.view.html"})}]),angular.module("products").controller("ProductsController",["$scope","$rootScope","$stateParams","$location","Authentication","Products","ProductService","CartService","ContentfulService","LoggerServices","lodash","$sce",function($scope,$rootScope,$stateParams,$location,Authentication,Products,ProductService,CartService,ContentfulService,LoggerServices,_,$sce){$scope.authentication=Authentication,$scope.$location=$location,$scope.productFiltersMin=0,$scope.productFiltersMax=500,$scope.pageSize=25,$scope.pageNum=1,$scope.productFilters={},$scope.selectedFilters={},$scope.priceRange=$scope.productFiltersMin+"-"+$scope.productFiltersMax,$scope.selectedOptionFilter="ALL",$scope.colorMapping={GOLD:["GOLD","BLACK/GOLD"],SILVER:["SILVER","GUNMETAL"],RED:["RED","RED/TORTOISE","RED/BLACK","RED/GREY FADE","BLACK/RED","BLUE/RED/WHITE","ROSE"],BLUE:["BLUE","DARK BLUE","BLUE/TEAL","BLACK/BLUE","BLUE/BLACK","BLUE/GREY","BLUE/TORTOISE","BLUE/GRAY","BLUE/WHITE MARBLE","BLUE/RED/WHITE"],BLACK:["BLACK","BLACK/BLUE","BLACK/CLEAR","BLACK ONYX FADE","RED/BLACK","BLACK/GRAY","BLUE/BLACK","BLACK/GOLD","BLACK/RED","BLACK/WHITE MARBLE","BLACK/GREY MARBLE","BLACK/GRAY MARBLE","BLACK/GRAY TORTOISE SHELL"],BROWN:["BROWN","COPPER BRINDLE","BROWN/TAN","PINK/BROWN","DARK BROWN","BROWN TORTOISE SHELL","MAHOGANY/BROWN","TORTISE SHELL BROWN","BROWN/AQUA","BRONZE","GREEN/BROWN","GREEN/BROWN FADE","BROWN/CLEAR","BROWN TORTOISE SHELL/PINK"],GREEN:["GREEN","LIGHT GREEN","MILITARY GREEN","GREEN/TORTOISE","GREEN/BROWN","GREEN/BROWN FADE"],GRAY:["GREY","GREY (OLIVE)","GRAY FADE","GRAY/CLEAR","GRAY","GRAY (OLIVE)","GRANITE GRAY","GREY/DRIFTWOOD","GRAY/DRIFTWOOD","BLACK/GRAY","BLUE/GREY","BLUE/GRAY","RED/GREY FADE","BLACK/GREY MARBLE","BLACK/GRAY MARBLE","BLACK/GRAY TORTOISE SHELL"],PURPLE:["BLACK/PURPLE"],WHITE:["BLONDE TORTOISE SHELL","BLUE/WHITE MARBLE","BLACK/WHITE MARBLE","BLUE/RED/WHITE","FROSTED CLEAR/WHITE"],TORTOISE:["BLONDE TORTOISE SHELL","BLUE/TORTOISE","BROWN TORTOISE SHELL","TORTOISE","MARBLED COPPER","BROWN TORTOISE SHELL/PINK"]},$scope.widthMapping={SMALL:["SMALL","SMALL/MEDIUM"],MEDIUM:["MEDIUM","SMALL/MEDIUM","MEDIUM/LARGE"],LARGE:["LARGE","MEDIUM/LARGE"]},$scope.sortAttributes=[{name:"name",sortAttr:"name.en",sortAsc:!0},{name:"price",sortAttr:"price",sortAsc:!0}],$scope.selectedSort=$scope.sortAttributes[0],$scope.FETCHING=!1,$scope.lang="en",$scope.currency="USD",$scope.error={},$scope.facetConfig={lensColor:{title:"Lens Color"},frameColor:{title:"Frame Color"},width:{title:"Frame Width"},frameShape:{title:"Frame Shape"},frameMaterial:{title:"Frame Material"}},$scope.currentFilters={},$scope.isAvailable=!1,$scope.product={};var processFilters=function(){if(_.each(_.keys($scope.facetConfig),function(filter){$scope.selectedFilters[filter]&&($scope.productFilters[filter]=_.keys($scope.selectedFilters[filter]))}),$scope.selectedFilters.width){var values=_.uniq(_.flatten(_.map(_.keys($scope.selectedFilters.width),function(item){return $scope.widthMapping[item]})));$scope.productFilters.width=values}if($scope.selectedFilters.frameColor){var values=_.uniq(_.flatten(_.map(_.keys($scope.selectedFilters.frameColor),function(item){return $scope.colorMapping[item]})));$scope.productFilters.frameColor=values}},mapFacets=function(facets){if(facets.width){var result=_.map(facets.width,function(item){return _.filter(_.keys($scope.widthMapping),function(elem){return item.term.indexOf(elem)!=-1})});facets.width=_.map(_.uniq(_.flatten(result)),function(item){return{term:item}})}if(facets.frameColor){var result=_.map(_.keys($scope.colorMapping),function(key){var match=_.find($scope.colorMapping[key],function(mappingColors){return!_.isUndefined(_.find(facets.frameColor,function(facetColor){return mappingColors==facetColor.term}))});if(!_.isUndefined(match))return key});facets.frameColor=_.map(_.compact(result),function(item){return{term:item}})}return facets=_.reduce(_.keys(facets),function(result,key){return result[key]=_.sortBy(facets[key],"term"),result},{})};$scope.find=function(){$stateParams.gender&&($scope.gender=$stateParams.gender,processFilters(),$scope.productFilters.gender=["UNISEX"],$scope.productFilters.gender.push($scope.gender.toUpperCase()),"MEN"==$scope.gender.toUpperCase()?$scope.productFilters.gender.push("Mens"):"WOMEN"==$scope.gender.toUpperCase()&&$scope.productFilters.gender.push("Womens"));var minPrice=100*Math.ceil($scope.productFiltersMin),maxPrice=100*Math.ceil($scope.productFiltersMax);$scope.productFilters.price={value:"range ("+minPrice+" to "+maxPrice+")",isText:!1},$scope.category=$stateParams.slug,$stateParams.categoryB=void 0,$scope.pageTitle=$scope.gender?$scope.gender+"'s "+$scope.category:$scope.category,ProductService.listBy($scope.category,$stateParams.categoryB,$scope.productFilters,$scope.pageNum,$scope.pageSize,$scope.selectedSort.sortAttr,$scope.selectedSort.sortAsc).then(function(results){$scope.results=results.data,$scope.categoryInfo=$scope.results.categories[0],$scope.categoryInfo.metaTitle&&$("title").text($scope.categoryInfo.metaTitle.en),
$scope.categoryInfo.metaDescription&&$("meta[name=description]").attr("content",$scope.categoryInfo.metaDescription.en),$scope.products=results.data.products,$scope.facets=mapFacets(results.data.facets),$scope.pageSize=results.data.pages.perPage||$scope.pageSize,$scope.pageNum=results.data.pages.current||$scope.pageNum,$scope.totalPages=results.data.pages.total,$scope.pageRange=new Array($scope.totalPages)})},$scope.init=function(){$stateParams.slug?($scope.loadContent($stateParams.gender,$stateParams.slug),$scope.find()):$scope.search()},$scope.loadContent=function(gender,slug){ContentfulService[slug](gender).then(function(data){$scope.contentfulData=data})},$scope.optionFilter=function(value){value?("PRESCRIPTION"==value&&($scope.selectedOptionFilter="PRESCRIPTION",$scope.productFilters.options=["PROGRESSIVE","SINGLEVISION"]),"FRAMES"==value&&($scope.selectedOptionFilter="FRAMES",$scope.productFilters.options="NONPRESCRIPTION")):($scope.selectedOptionFilter="ALL",delete $scope.productFilters.options),$scope.init()},$scope.search=function(){var text=$stateParams.text;if(processFilters(),$scope.category="Search",$scope.pageTitle="Search",$stateParams.gender){$scope.gender=$stateParams.gender,$scope.productFilters.gender={};var genderAlias;"MEN"==$scope.gender.toUpperCase()?genderAlias="Mens":"WOMEN"==$scope.gender.toUpperCase()&&(genderAlias="Womens"),$scope.productFilters.gender={value:'"UNISEX","'+$scope.gender.toUpperCase()+'","'+genderAlias+'"',isText:!1}}ProductService.search(text,$scope.productFilters,$scope.pageNum,$scope.pageSize,$scope.selectedSort.sortAttr,$scope.selectedSort.sortAsc).then(function(results){$scope.results=results.data,$scope.products=results.data.products,$scope.facets=mapFacets(results.data.facets),$scope.pageSize=results.data.pages.perPage||$scope.pageSize,$scope.pageNum=results.data.pages.current||$scope.pageNum,$scope.totalPages=results.data.pages.total,$scope.pageRange=new Array($scope.totalPages);for(var i=0;i<results.data.products.length;i++)$scope.products[i].displayVariant=$scope.products[i].displayVariant||$scope.products[i].masterVariant})},$scope.getCategory=function(){var slug=$stateParams.slug;return slug},$scope.fetchRecommendedProducts=function(category,gender,pageSize){var promise=new Promise(function(resolve,reject){var products={};if(category){var filters={};gender&&(filters.gender={value:'"'+gender+'"',isText:!1}),$scope.sort={},ProductService.listBy(category,void 0,filters,1,pageSize||5,$scope.selectedSort.sortAttr,$scope.selectedSort.sortAsc).then(function(results){results.data.products.length>0&&(products=results.data.products),resolve(products)})}});return promise},$scope.selectFilter=function(filterName,term){$scope.selectedFilters[filterName][term]===!1&&(delete $scope.selectedFilters[filterName][term],_.isEmpty($scope.selectedFilters[filterName])&&(delete $scope.productFilters[filterName],delete $scope.selectedFilters[filterName])),$scope.init()},$scope.clearFilter=function(filterName){return delete $scope.productFilters[filterName],delete $scope.selectedFilters[filterName],$scope.init(),!1},$scope.priceChange=function(minValue,maxValue){$scope.productFiltersMin=parseInt(minValue),$scope.productFiltersMax=parseInt(maxValue),$scope.init()},$scope.minChange=function(value){value&&($scope.productFiltersMin=value)},$scope.maxChange=function(value){value&&($scope.productFiltersMax=value)},$scope.sortBy=function(sortName){if(!$scope.FETCHING){if($scope.sort){var value="ASC"==$scope.sort[sortName]?"DESC":"ASC";$scope.sort[sortName]=value}else $scope.sort={};var newSort=_.find($scope.sortAttributes,function(item){return item.name===sortName});return newSort.sortAttr==$scope.selectedSort.sortAttr&&(newSort.sortAsc=!$scope.selectedSort.sortAsc),$scope.selectedSort=newSort,$scope.init(),!1}},$scope.findOne=function(){$scope.product=Products.get({productId:$stateParams.productId})},$scope.quantity=1,$scope.incrementQuantity=function(){$scope.quantity++},$scope.decrementQuantity=function(){$scope.quantity>1&&$scope.quantity--},$scope.addToCart=function(inStock){$scope.isAvailable&&(inStock?$scope.distributionChannel?($scope.error.distributionChannel=null,CartService.addToCart($scope.product.id,$scope.currentVariant.id,$scope.distributionChannel,$scope.quantity)):$scope.error.distributionChannel="Please select an option":LoggerServices.error("Product out of stock"))},$scope.switchImageBig=function(image){$scope.imgBig=image},$scope.view=function(id){id||(id=$stateParams.id),$scope.recommendedProducts=[];var products=new Products({id:id});products.$get({id:id},function(result){$scope.product=result.product,result.product.metaTitle&&$("title").text(result.product.metaTitle.en),result.product.metaDescription&&$("meta[name=description]").attr("content",result.product.metaDescription.en),$rootScope.productShare=result.product,$scope.product.variants.unshift($scope.product.masterVariant);var parameterVariant=$scope.product.masterVariant;$rootScope.productSkuDisplay&&(parameterVariant=_.find($scope.product.variants,{sku:$rootScope.productSkuDisplay})),$scope.currentVariant=setAttributes(parameterVariant),1===$scope.currentVariant.prices.length&&($scope.distributionChannel=$scope.currentVariant.prices[0].channel.key),$scope.facets=result.facets,"eyewear"===result.product.categories[0].obj.slug.en&&(delete $scope.facets.mirrorColor,delete $scope.facets.lensColor),$scope.channels=result.channels,$scope.facetsArray=[],null!=$scope.currentVariant.images[0]?($scope.imgBig=$scope.currentVariant.images[0].url,$scope.imageThumbnails=$scope.currentVariant.images):($scope.imgBig="/design/image-not-found.jpg",$scope.imageThumbnails=null),_.each(Object.keys(result.facets),function(key){if(result.facets[key].length>0){var displayName=key;"lensColor"===key&&"eyewear"===result.product.categories[0].obj.slug.en&&(displayName="LensOption"),$scope.facetsArray.push({name:key,value:result.facets[key],displayName:displayName})}}),_.each($scope.facetsArray,function(facet){var value=_.find($scope.currentVariant.attributes,{name:facet.name});value&&$scope.selectVariant(facet.name,value.value.key)}),$scope.breadcrumbs={},$scope.breadcrumbs.category=$scope.product.categories[0].obj.slug.en;var gender=_.find($scope.product.masterVariant.attributes,{name:"gender"});gender&&($scope.breadcrumbs.sub_category={show:!0,name:(gender.value.key+"'s "+$scope.breadcrumbs.category).toLowerCase(),url:("/#!/"+gender.value.key+"/"+$scope.breadcrumbs.category).toLowerCase()},$scope.fetchRecommendedProducts($scope.product.categories[0].obj.slug.en,gender.value.key).then(function(result){$scope.$apply(function(){$scope.recommendedProducts=result})})),$scope.facetsArrayCopy=angular.copy($scope.facetsArray),removeFacetsOptionsNotAvailable()})};var removeFacetsOptionsNotAvailable=function(){if($scope.facetsArrayCopy){$scope.facetsArray=angular.copy($scope.facetsArrayCopy);var key="frameColor",firstValue=$scope.currentFilters[key],variants=_.filter($scope.product.variants,function(variant){var exists=!1;return _.each(variant.attributes,function(attribute){attribute.name!=key||attribute.value.key!=$scope.currentFilters[key]&&attribute.value.label.en!=$scope.currentFilters[key]||(exists=!0)}),exists});$scope.currentFilters.lensColor&&(variants=_.filter(variants,function(variant){var existsLensColor=!1,existsFrameColor=!1;return _.each(variant.attributes,function(attribute){_.each(_.find($scope.facetsArray,{name:"lensColor"}).value,function(lensColor){"lensColor"!=attribute.name||attribute.value.key!=lensColor.term&&attribute.value.label.en!=lensColor.term||(existsLensColor=!0),"frameColor"!=attribute.name||attribute.value.key!=firstValue&&attribute.value.label.en!=firstValue||(existsFrameColor=!0)})}),existsLensColor&&existsFrameColor}),_.each($scope.facetsArray,function(facet){"lensColor"==facet.name&&_.remove(facet.value,function(facetValue){var remove=!0;return _.each(variants,function(variant){_.each(variant.attributes,function(attribute){"lensColor"!=attribute.name||attribute.value.key!=facetValue.term&&attribute.value.label.en!=facetValue.term||(remove=!1)})}),remove})})),$scope.currentFilters.mirrorColor?(variants=_.filter(variants,function(variant){var existsMirrorColor=!1,existsLensColor=!1,existsFrameColor=!1;return _.each(variant.attributes,function(attribute){_.each(_.find($scope.facetsArray,{name:"mirrorColor"}).value,function(mirrorColor){"mirrorColor"!=attribute.name||attribute.value.key!=mirrorColor.term&&attribute.value.label.en!=mirrorColor.term||(existsMirrorColor=!0),"lensColor"!=attribute.name||attribute.value.key!=$scope.currentFilters.lensColor&&attribute.value.label.en!=$scope.currentFilters.lensColor||(existsLensColor=!0),"frameColor"!=attribute.name||attribute.value.key!=firstValue&&attribute.value.label.en!=firstValue||(existsFrameColor=!0)})}),existsMirrorColor&&existsLensColor&&existsFrameColor}),_.each($scope.facetsArray,function(facet){if("mirrorColor"==facet.name){_.remove(facet.value,function(facetValue){var remove=!0;return _.each(variants,function(variant){_.each(variant.attributes,function(attribute){"mirrorColor"!=attribute.name||attribute.value.key!=facetValue.term&&attribute.value.label.en!=facetValue.term||(remove=!1)})}),remove});var existFilter=_.find(facet.value,{term:$scope.currentFilters.mirrorColor});existFilter||($scope.currentFilters.mirrorColor=facet.value[0].term)}})):_.each($scope.facetsArray,function(facet){"mirrorColor"==facet.name&&(facet.value=[])})}},setAttributes=function(product){return product.frameShape=_.find(product.attributes,function(attr){return"frameShape"==attr.name}),product.frameType=_.find(product.attributes,function(attr){return"frameType"==attr.name}),product.frameMaterial=_.find(product.attributes,function(attr){return"frameMaterial"==attr.name}),product.mirrorReflection=_.find(product.attributes,function(attr){return"mirrorReflection"==attr.name}),product.width=_.find(product.attributes,function(attr){return"width"==attr.name}),product},setCurrentVariant=function(variant){$scope.currentVariant=setAttributes(variant),_.each($scope.currentVariant.prices,function(price){price.channel=_.find($scope.channels,function(channel){return channel.id===price.channel.id})}),$scope.price=$scope.currentVariant.prices[0],1===$scope.currentVariant.prices.length&&($scope.distributionChannel=$scope.currentVariant.prices[0].channel.key),null!=$scope.currentVariant.images[0]?($scope.imgBig=$scope.currentVariant.images[0].url,$scope.imageThumbnails=$scope.currentVariant.images):($scope.imgBig="/design/image-not-found.jpg",$scope.imageThumbnails=null),$scope.isAvailable=!0},changeImageForOptical=function(attrKey,attrValue){if("frameColor"===attrKey){var foundVariant=_.find($scope.product.variants,function(variant){var foundAttribute=_.find(variant.attributes,function(attribute){return attribute.name==attrKey&&(attribute.value.key==attrValue||attribute.value.label.en==attrValue)});return void 0!=foundAttribute});foundVariant&&(null!=foundVariant.images[0]?($scope.imgBig=foundVariant.images[0].url,$scope.imageThumbnails=foundVariant.images):($scope.imgBig="/design/image-not-found.jpg",$scope.imageThumbnails=null))}};$scope.selectVariant=function(attrKey,attrValue){changeImageForOptical(attrKey,attrValue),$scope.currentFilters[attrKey]=attrValue;var notUndefinedFacetLength=_.filter($scope.facetsArray,function(filter){return filter.value.length>0}).length;if(removeFacetsOptionsNotAvailable(),notUndefinedFacetLength==Object.keys($scope.currentFilters).length){var variantFound=_.find($scope.product.variants,function(variant){var complies=0;return _.each(Object.keys($scope.currentFilters),function(filterKey){_.each(variant.attributes,function(attribute){if(attribute.name==filterKey&&(attribute.value.key==$scope.currentFilters[filterKey]||attribute.value.label.en==$scope.currentFilters[filterKey]))return void complies++})}),Object.keys($scope.currentFilters).length==complies});if(void 0==variantFound)return $scope.isAvailable=!1,void LoggerServices.warning("This variant is not available.");setCurrentVariant(variantFound)}},$scope.formatFacetName=function(name){return name.replace(/([A-Z])/g," $1").replace(/^./,function(str){return str.toUpperCase()})},$scope.trustAsHtml=function(string){return $sce.trustAsHtml(string)},$scope.channelInfo=function(price){var channel=_.find($scope.channels,function(item){return item.id==price.channel.id});return channel},$scope.redirectToProduct=function(slug,sku){$rootScope.productSkuDisplay=sku,$location.path("/products/"+slug)}}]);var module=angular.module("products");module.directive("latestProducts",["ProductService",function(ProductService){return{templateUrl:"modules/products/templates/latest-products.client.template.html",restrict:"E",scope:{category:"@",gender:"@",length:"@"},replace:!0,link:function($scope){$scope.sort={},$scope.pageSize=$scope.length||4,$scope.products=[];var filters={};$scope.gender&&(filters.gender={value:'"'+$scope.gender.toUpperCase()+'"',isText:!1}),ProductService.listBy($scope.category,void 0,filters,1,$scope.pageSize,"name.en",!0).then(function(results){results.data.products.length>0&&($scope.products=results.data.products)})}}}]);var module=angular.module("products");module.directive("productThumbnail",["$rootScope",function($rootScope){return{templateUrl:"modules/products/templates/product.client.template.html",restrict:"E",scope:{product:"="},replace:!0,link:function($scope){$scope.currency="USD",$scope.lang="en",$scope.product.hasOwnProperty("displayVariant")||($scope.product.displayVariant=$scope.product.masterVariant),$scope.product.displayVariant.isNew=!1;for(var i=0;i<$scope.product.displayVariant.attributes.length;i++)if("isNew"==$scope.product.displayVariant.attributes[i].name){$scope.product.displayVariant.isNew=!0;break}$scope.ready=!0,$scope.setProductSkuDisplay=function(sku){$rootScope.productSkuDisplay=sku}}}}]);var currencyCodeMap={EUR:"€",USD:"$"},module=angular.module("products");module.filter("facets",function(){return function(input){return terms.hasOwnProperty(input)?terms[input]:input}}),module.filter("spherePrice",function(){return function(price){if(price){price.hasOwnProperty("value")&&(price=price.value);var result,amount=(price.centAmount/100).toFixed(2);switch(price.currencyCode){case"EUR":result=amount+currencyCodeMap[price.currencyCode];break;case"USD":result=currencyCodeMap[price.currencyCode]+amount}return result}}}),module.filter("currency",["appDefaults",function(appDefaults){return function(input,currency){var prices=[];if(currency=currency||appDefaults.currency,"object"==typeof input)for(var key in input){var price=input[key];price&&price.value.currencyCode==currency&&prices.push(price)}return prices}}]),module.filter("channel",function(){return function(input,channel){if("object"==typeof input&&channel){var return_price=null;if("string"==typeof channel)for(var key in input){var price=input[key];if(price&&price.channel.key==channel){return_price=price;break}}return!return_price&&price&&(return_price=price),return_price}return null}}),module.filter("sphereDate",function(){return function(input){return new Date(Date.parse(input))}}),module.filter("localeDate",function(){return function(input){return input.toLocaleDateString()}}),module.filter("label",function(){return function(input){return input?"true"==input.toString()?"Yes":"false"==input.toString()?"No":input.charAt(0).toUpperCase()+input.slice(1):"N/A"}});var terms={SQUARE:"Square",ROUND:"Round",RECTANGLE:"Rectangle",NARROW:"Narrow",WIDE:"Wide",MEDIUM:"Medium"};angular.module("products").factory("Products",["$resource",function($resource){return $resource("api/products/:id",{id:"@_id"},{update:{method:"PUT"},get:{method:"GET"}})}]),angular.module("products").service("ProductService",["$http","$q","$location",function($http,$q,$location){var urlString="/api/products";this.list=function(){var deferred=$q.defer();return $http.get(urlString).success(function(data){deferred.resolve(data)}),deferred.promise},this.listBy=function(categoryA,categoryB,attributes,page,perPage,sortAttr,sortAsc){var queryString=urlString+"/categories";return null!=categoryA&&(queryString+="/"+categoryA),null!=categoryB&&(queryString+="/"+categoryB),queryString+="?page="+(null==page?1:page),queryString+="&perPage="+(null==perPage?10:perPage),sortAttr&&(queryString+="&sortAttr="+sortAttr+"&sortAsc="+sortAsc),$http.post(queryString,attributes)},this.search=function(text,attributes,page,perPage,sortAttr,sortAsc){var queryString=urlString+"/search/"+text;return queryString+="?page="+(null==page?1:page),queryString+="&perPage="+(null==perPage?10:perPage),sortAttr&&(queryString+="&sortAttr="+sortAttr+"&sortAsc="+sortAsc),$http.post(queryString,attributes)}}]);